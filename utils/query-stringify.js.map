{"version":3,"file":"query-stringify.js","sourceRoot":"","sources":["query-stringify.ts"],"names":[],"mappings":"AAAA;;;;;GAKG;AAIH,SAAS,iBAAiB,CAAC,IAAmB;IAC1C,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,WAAW,KAAK,MAAM,CAAC,EAAE;QAC7C,MAAM,KAAK,CAAC,yBAAyB,CAAC,CAAC;KAC1C;IACD,IAAI,MAAM,GAAG,EAAE,CAAC;IAEhB,SAAS,OAAO,CAAC,OAAO,EAAE,IAAI;QAC1B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,UAAC,GAAG;YAC1B,IAAI,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;YAEtB,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,KAAK,MAAM,CAAC,EAAE;gBAE7C,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;gBAC3B,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC;gBAEnC,IAAI,MAAM,GAAG,OAAO,KAAK,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;gBAE9D,OAAO,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;aAE1B;iBAAM,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,KAAK,KAAK,CAAC,EAAE;gBACnD,IAAI,MAAM,GAAG,KAAmB,CAAC;gBACjC,MAAM,CAAC,OAAO,CAAC,UAAC,CAAC,EAAE,KAAK;oBAEpB,IAAI,MAAM,GAAG,OAAO,KAAK,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;oBAE9D,MAAM,IAAI,GAAG,GAAG,KAAK,GAAG,GAAG,CAAC;oBAE5B,IAAI,MAAM,GAAG,EAAE,CAAC;oBAChB,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;oBAC7B,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBACxB,CAAC,CAAC,CAAC;aAEN;iBAAM;gBAEH,IAAI,MAAM,GAAG,OAAO,KAAK,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;gBAE9D,IAAI,MAAM,GAAG,EAAE,CAAC;gBAChB,MAAM,CAAC,MAAM,CAAC,GAAG,KAAK,CAAC;gBACvB,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;aACvB;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED,OAAO,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;IAElB,IAAI,GAAG,GAAG,EAAE,CAAC;IACb,MAAM,CAAC,OAAO,CAAC,UAAC,IAAI,EAAE,KAAK;QACvB,IAAI,KAAK,IAAI,CAAC,EAAE;YACZ,GAAG,IAAI,GAAG,CAAC;SACd;QACD,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACnE,CAAC,CAAC,CAAC;IAEH,OAAO,GAAG,CAAC;AACf,CAAC","sourcesContent":["/**\n * @description \n * @example\n * const obj: StringIndexed = {key: 1, key2: 'test', key3: false, key4: true, key5: [1, 2, 3], key6: { a: 1 }, key7: { b: { d: 2 } }};\n * queryStringify(obj) returns 'key=1&key2=test&key3=false&key4=true&key5[0]=1&key5[1]=2&key5[2]=3&key6[a]=1&key7[b][d]=2'\n */\n\ntype StringIndexed = Record<string, unknown>;\n\nfunction queryStringifyNew(data: StringIndexed): string | never {\n    if (!(!!data) || !(data.constructor === Object)) {\n        throw Error(\"input must be an object\");\n    }\n    let result = [];\n\n    function process(initkey, data) {\n        Object.keys(data).forEach((key) => {\n            let value = data[key];\n\n            if ((!!value) && (value.constructor === Object)) {\n\n                console.log(\"key = \", key);\n                console.log(\"initkey = \", initkey);\n\n                let newkey = initkey === \"\" ? key : initkey + \"[\" + key + \"]\";\n\n                process(newkey, value);\n\n            } else if ((!!value) && (value.constructor === Array)) {\n                let vArray = value as Array<any>;\n                vArray.forEach((v, index) => {\n\n                    let newkey = initkey === \"\" ? key : initkey + \"[\" + key + \"]\";\n\n                    newkey += '[' + index + ']';\n\n                    let tmpobj = {};\n                    tmpobj[initkey + newkey] = v;\n                    result.push(tmpobj);\n                });\n\n            } else {\n\n                let newkey = initkey === \"\" ? key : initkey + \"[\" + key + \"]\";\n\n                let tmpobj = {};\n                tmpobj[newkey] = value;\n                result.push(tmpobj);\n            }\n        });\n    }\n\n    process(\"\", data);\n\n    let str = \"\";\n    result.forEach((pair, index) => {\n        if (index != 0) {\n            str += \"&\";\n        }\n        str += Object.keys(pair)[0] + \"=\" + pair[Object.keys(pair)[0]];\n    });\n\n    return str;\n}"]}