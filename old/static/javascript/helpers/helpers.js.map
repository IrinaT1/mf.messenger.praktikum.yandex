{"version":3,"file":"helpers.js","sourceRoot":"","sources":["helpers.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,UAAU,EAAE,oBAAoB,EAAC,MAAM,iBAAiB,CAAC;AAEjE,UAAU,EAAE,CAAC,cAAc,CAAC,aAAa,EAAE,UAAS,IAAY,EAAE,IAAY;IAC1E,IAAI,SAAS,GAAG,IAAI,KAAK,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,WAAW,CAAC;IAC7D,IAAI,IAAI,GAAG,mCAAgC,SAAS,2BAAmB,IAAI,cAAW,CAAC;IACvF,OAAO,oBAAoB,CAAC,IAAI,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC;AAEH,8GAA8G;AAE9G,UAAU,EAAE,CAAC,cAAc,CAAC,iBAAiB,EAAE,UAAS,IAAY,EAAE,KAAa,EAAE,KAAa,EAAE,QAAiB;IACjH,IAAI,IAAI,GAAG,gFAEoB,IAAI,yDAA8C,KAAK,YAAM,CAAC,QAAQ,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,UAAU,+DACrF,KAAK,0EAGjD,CAAC;IACF,OAAO,oBAAoB,CAAC,IAAI,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC;AAEH,UAAU,EAAE,CAAC,cAAc,CAAC,kBAAkB,EAAE,UAAS,IAAY,EAAE,KAAa,EAAE,KAAa;IAC/F,IAAI,IAAI,GAAG,iFAEqB,IAAI,yDAA8C,KAAK,yEAC1C,KAAK,0EAGjD,CAAC;IACF,OAAO,oBAAoB,CAAC,IAAI,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC;AAEH,UAAU,EAAE,CAAC,cAAc,CAAC,qBAAqB,EAAE,UAAS,IAAY,EAAE,KAAa,EAAE,KAAa;IAClG,IAAI,IAAI,GAAG,oFAEwB,IAAI,yDAA8C,KAAK,yEAC7C,KAAK,0EAGjD,CAAC;IACF,OAAO,oBAAoB,CAAC,IAAI,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC;AAEH,UAAU,EAAE,CAAC,cAAc,CAAC,WAAW,EAAE,UAAS,IAAY,EAAE,IAAY;IACxE,IAAI,IAAI,GAAG,eAAY,IAAI,+BAAuB,IAAI,SAAM,CAAC;IAC7D,OAAO,oBAAoB,CAAC,IAAI,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC","sourcesContent":["import {handlebars, handlebarsSafeString} from './handlebars.js';\n\nhandlebars().registerHelper('chat-button', function(text: string, type: string): string {\n    let className = type === \"primary\" ? \"primary\" : \"secondary\";\n    let html = `<button class=\"button-submit ${className}\" type=\"button\">${text}</button>`;\n    return handlebarsSafeString(html);\n});\n\n//TODO: обёртку вокруг инпута вынести в отдельный шаблон, потому что он повторяется в каждом хэлпере с инпутом\n\nhandlebars().registerHelper('chat-input-text', function(name: string, label: string, value: string, required: boolean): string {\n    let html = `\n    <div class=\"input-container\">\n        <input type=\"text\" name=\"${name}\" class=\"inputtext\" placeholder=\" \" value=\"${value}\" ${ (required === false) ? \"\" : \"required\"} />\n        <span class=\"inputtext-floating-label\">${label}</span>\n        <span class=\"error-text\"></span>\n    </div>\n    `;\n    return handlebarsSafeString(html);\n});\n\nhandlebars().registerHelper('chat-input-email', function(name: string, label: string, value: string): string {\n    let html = `\n    <div class=\"input-container\">\n        <input type=\"email\" name=\"${name}\" class=\"inputtext\" placeholder=\" \" value=\"${value}\" required />\n        <span class=\"inputtext-floating-label\">${label}</span>\n        <span class=\"error-text\"></span>\n    </div>\n    `;\n    return handlebarsSafeString(html);\n});\n\nhandlebars().registerHelper('chat-input-password', function(name: string, label: string, value: string): string {\n    let html = `\n    <div class=\"input-container\">\n        <input type=\"password\" name=\"${name}\" class=\"inputtext\" placeholder=\" \" value=\"${value}\" required />\n        <span class=\"inputtext-floating-label\">${label}</span>\n        <span class=\"error-text\"></span>\n    </div>\n    `;\n    return handlebarsSafeString(html);\n});\n\nhandlebars().registerHelper('chat-link', function(text: string, href: string): string {\n    let html = `<a href=\"${href}\" class=\"link-back\">${text}</a>`;\n    return handlebarsSafeString(html);\n});"]}