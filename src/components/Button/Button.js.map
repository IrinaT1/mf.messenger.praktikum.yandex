{"version":3,"file":"Button.js","sourceRoot":"","sources":["Button.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,OAAO,EAAC,KAAK,EAAY,MAAM,sBAAsB,CAAC;AACtD,OAAO,EAAC,UAAU,EAAC,MAAM,2BAA2B,CAAC;AACrD,OAAO,EAAC,QAAQ,EAAC,MAAM,kBAAkB,CAAC;AAE1C;IAA4B,0BAAK;IAC/B,gBAAY,KAAyC;QACnD,qCAAqC;eACrC,kBAAM,QAAQ,EAAE,KAAK,CAAC;IACxB,CAAC;IAED,uBAAM,GAAN;QACE,sEAAsE;QAEtE,IAAM,IAAI,GAAG,UAAU,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QAC5C,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC1B,CAAC;IACH,aAAC;AAAD,CAAC,AAZD,CAA4B,KAAK,GAYhC","sourcesContent":["import {Block, PropsType} from \"../../utils/Block.js\";\nimport {handlebars} from \"../../utils/Handlebars.js\";\nimport {template} from \"./Button.tmpl.js\";\n\nexport class Button extends Block {\n  constructor(props: {className: string, child: string}) {\n    // Создаём враппер DOM-элемент button\n    super(\"button\", props);\n  }\n\n  render() {\n    // В данном случае render возвращает строкой разметку из шаблонизатора\n\n    const tmpl = handlebars().compile(template);\n    return tmpl(this.props);\n  }\n}"]}