{"version":3,"file":"Router.js","sourceRoot":"","sources":["Router.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,KAAK,EAAE,MAAM,YAAY,CAAC;AAEnC;IAOI,gBAAY,SAAiB;QACzB,IAAI,MAAM,CAAC,UAAU,EAAE;YACnB,OAAO,MAAM,CAAC,UAAU,CAAC;SAC5B;QAED,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;QAC9B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAE5B,MAAM,CAAC,UAAU,GAAG,IAAI,CAAC;IAC7B,CAAC;IAED,oBAAG,GAAH,UAAI,QAAgB,EAAE,KAAK;QACvB,IAAM,KAAK,GAAG,IAAI,KAAK,CAAC,QAAQ,EAAE,KAAK,EAAE,EAAC,SAAS,EAAE,IAAI,CAAC,UAAU,EAAC,CAAC,CAAC;QACvE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACxB,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,sBAAK,GAAL;QAAA,iBAMC;QALC,MAAM,CAAC,UAAU,GAAG,CAAC,UAAC,KAAoB;YACxC,KAAI,CAAC,QAAQ,CAAE,KAAK,CAAC,aAAwB,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;QACnE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAEd,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;IAC1C,CAAC;IAED,yBAAQ,GAAR,UAAS,QAAgB;QACrB,IAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;QACtC,IAAI,CAAC,KAAK,EAAE;YACV,OAAO,CAAC,GAAG,CAAC,+BAA6B,QAAU,CAAC,CAAC;YACrD,OAAO;SACR;QAED,IAAI,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,aAAa,KAAK,KAAK,EAAE;YACpD,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;SAC9B;QAED,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,KAAK,CAAC,MAAM,EAAE,CAAC;IACnB,CAAC;IAED,mBAAE,GAAF,UAAG,QAAgB;QACjB,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE,EAAE,EAAE,EAAE,QAAQ,CAAC,CAAC;QACzC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;IAC1B,CAAC;IAED,qBAAI,GAAJ;QACE,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;IACtB,CAAC;IAED,wBAAO,GAAP;QACE,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;IACzB,CAAC;IAED,yBAAQ,GAAR,UAAS,QAAgB;QACrB,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAA,KAAK,IAAI,OAAA,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,EAArB,CAAqB,CAAC,CAAC;IAC5D,CAAC;IACL,aAAC;AAAD,CAAC,AAjED,IAiEC","sourcesContent":["import { Route } from \"./Route.js\";\n\nexport class Router {\n    private static __instance: Router;\n    private routes: Route[];\n    private history: History;\n    private _currentRoute: Route;\n    private _rootQuery: string;\n\n    constructor(rootQuery: string) {\n        if (Router.__instance) {\n            return Router.__instance;\n        }\n\n        this.routes = [];\n        this.history = window.history;\n        this._currentRoute = null;\n        this._rootQuery = rootQuery;\n\n        Router.__instance = this;\n    }\n\n    use(pathname: string, block): Router {\n        const route = new Route(pathname, block, {rootQuery: this._rootQuery});\n        this.routes.push(route);\n        return this;\n    }\n\n    start(): void {\n      window.onpopstate = ((event: PopStateEvent): void => {\n        this._onRoute((event.currentTarget as Window).location.pathname);\n      }).bind(this);\n\n      this._onRoute(window.location.pathname);\n    }\n\n    _onRoute(pathname: string): void {\n        const route = this.getRoute(pathname);\n        if (!route) {\n          console.log(`route not found for path: ${pathname}`);\n          return;\n        }\n\n        if (this._currentRoute && this._currentRoute !== route) {\n            this._currentRoute.leave();\n        }\n\n        this._currentRoute = route;\n        route.render();\n    }\n\n    go(pathname: string) {\n      this.history.pushState({}, '', pathname);\n      this._onRoute(pathname);\n    }\n\n    back() {\n      this.history.back();\n    }\n\n    forward() {\n      this.history.forward();\n    }\n\n    getRoute(pathname: string) {\n        return this.routes.find(route => route.match(pathname));\n    }\n}"]}