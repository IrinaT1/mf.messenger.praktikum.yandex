{"version":3,"file":"Block.js","sourceRoot":"","sources":["Block.ts"],"names":[],"mappings":"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","sourcesContent":["import { EventBus } from './EventBus.js';\n\nexport type PropsValueType = string | number | boolean;\nexport type PropsType = Record<string, PropsValueType>;\n\nexport class Block {\n    static EVENTS = {\n        INIT: \"init\",\n        FLOW_CDM: \"flow:component-did-mount\",\n        FLOW_CDU: \"flow:component-did-update\",\n        FLOW_RENDER: \"flow:render\"\n    };\n\n    private _element: HTMLElement | null = null;\n    private _meta = null;\n\n    public props: PropsType;\n    private eventBus: () => EventBus;\n\n    constructor(tagName: string = \"div\", props: PropsType = {}) {\n        const eventBus = new EventBus();\n        this._meta = {\n            tagName,\n            props\n        };\n\n        this.props = this._makePropsProxy(props);\n\n        this.eventBus = () => eventBus;\n\n        this._registerEvents(eventBus);\n        eventBus.emit(Block.EVENTS.INIT);\n    }\n\n    _registerEvents(eventBus: EventBus): void {\n        eventBus.on(Block.EVENTS.INIT, this.init.bind(this));\n        eventBus.on(Block.EVENTS.FLOW_CDM, this._componentDidMount.bind(this));\n        eventBus.on(Block.EVENTS.FLOW_CDU, this._componentDidUpdate.bind(this));\n        eventBus.on(Block.EVENTS.FLOW_RENDER, this._render.bind(this));\n    }\n\n    _createResources(): void {\n        const { tagName } = this._meta;\n        this._element = this._createDocumentElement(tagName);\n    }\n\n    init(): void {\n        this._createResources();\n        this.eventBus().emit(Block.EVENTS.FLOW_CDM);\n    }\n\n    _componentDidMount(): void {\n        this.componentDidMount();\n        this.eventBus().emit(Block.EVENTS.FLOW_RENDER);\n    }\n\n    // Может переопределять пользователь, необязательно трогать\n    componentDidMount(): void { }\n\n    _componentDidUpdate(oldProps: PropsType, newProps: PropsType): void {\n        const response = this.componentDidUpdate(oldProps, newProps);\n\n        if (response || oldProps !== newProps) {\n            this._render();\n            this.eventBus().emit(Block.EVENTS.FLOW_RENDER);\n        }\n    }\n\n    // Может переопределять пользователь, необязательно трогать\n    componentDidUpdate(oldProps: PropsType, newProps: PropsType): boolean {\n        return true;\n    }\n\n    setProps(nextProps: PropsType) {\n        if (!nextProps) {\n            return;\n        }\n        Object.assign(this.props, nextProps);\n        // this.eventBus().emit(Block.EVENTS.FLOW_CDU, this.props, nextProps);\n    };\n\n    get element() {\n        return this._element;\n    }\n\n    _render(): void {\n        const block = this.render();\n        // Этот небезопасный метод для упрощения логики\n        // Используйте шаблонизатор из npm или напиши свой безопасный\n        // Нужно не в строку компилировать (или делать это правильно),\n        // либо сразу в DOM-элементы превращать из возвращать из compile DOM-ноду\n        this._element.innerHTML = block;\n    }\n\n    // Может переопределять пользователь, необязательно трогать\n    render(): string {\n        return 'Please provide render data';\n    };\n\n    getContent(): HTMLElement {\n        return this.element;\n    }\n\n    _makePropsProxy(props: PropsType): PropsType {\n        let proxyProps = new Proxy(props, {\n            get(target: PropsType, prop: string): PropsValueType {\n                return target[prop];\n            },\n\n            set: (target: PropsType, prop: string, val: PropsValueType): boolean => {\n                target[prop] = val;\n                this.eventBus().emit(Block.EVENTS.FLOW_CDU, { ...target }, target);\n                return true;\n            },\n\n            deleteProperty(target, prop): boolean {\n                throw Error(\"Error: couldn't delete\");\n            }\n        });\n\n        return proxyProps;\n    }\n\n    _createDocumentElement(tagName: string): HTMLElement {\n        // Можно сделать метод, который через фрагменты в цикле создает сразу несколько блоков\n        return document.createElement(tagName);\n    }\n\n    show() {\n        this.getContent().style.display = \"block\";\n    }\n\n    hide() {\n        this.getContent().style.display = \"none\";\n    }\n}"]}