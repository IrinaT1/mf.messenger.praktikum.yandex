{"version":3,"file":"set.js","sourceRoot":"","sources":["set.ts"],"names":[],"mappings":"AAAA;;;;;GAKG;AAEH,OAAO,EAAC,KAAK,EAAE,QAAQ,EAAC,MAAM,iBAAiB,CAAC;AAMhD,SAAS,GAAG,CAAC,MAAyB,EAAE,IAAY,EAAE,KAAc;IACnE,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;QAChB,OAAO,MAAM,CAAC;KACjB;IAED,IAAI,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,CAAC;IACxC,IAAI,MAAM,GAAY,EAAE,CAAC;IACzB,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;IAC3B,OAAO,CAAC,OAAO,CAAC,UAAC,CAAC,EAAE,KAAK;;QACpB,IAAI,KAAK,GAAG,CAAC,EAAE;YACZ,MAAM,aAAI,GAAC,CAAC,IAAG,MAAM,KAAC,CAAC;SACzB;IACN,CAAC,CAAC,CAAC;IAEH,IAAI,QAAQ,GAAG,KAAK,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;IAErC,OAAO,QAAQ,CAAC;AACpB,CAAC;AAGD;;;EAGE","sourcesContent":["/**\n * @description sets value by string path\n * @example\n * set({ foo: 5 }, 'bar.baz', 10); // returns { foo: 5, bar: { baz: 10 } }\n * set(3, 'foo.bar', 'baz'); // returns 3\n */\n\nimport {merge, isObject} from \"./merge-deep.js\";\n\ntype Indexed<T = unknown> = {\n    [key in string]: T;\n};\n\nfunction set(object: Indexed | unknown, path: string, value: unknown): Indexed | unknown {\n\tif (!isObject(object)) {\n        return object;\n    }\n  \n    let pathArr = path.split(\".\").reverse();\n    let resObj: Indexed = {};\n    resObj[pathArr[0]] = value;\n    pathArr.forEach((p, index) => {\n         if (index > 0) {\n            resObj = {[p]: resObj};\n         }\n    });\n\n    let resFinal = merge(object, resObj);\n\n    return resFinal;\n}\n\n\n/**\n  * set({ foo: 5 }, 'bar.baz', 10); // { foo: 5, bar: { baz: 10 } }\n  * set(3, 'foo.bar', 'baz'); // 3\n*/"]}