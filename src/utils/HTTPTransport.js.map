{"version":3,"file":"HTTPTransport.js","sourceRoot":"","sources":["HTTPTransport.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @description sends HTTP requests\n * @example\n * new HTTPTransport().get('https://chats', {timeout: 5000, headers: {\"h1\": \"v1\", \"h2\": \"v2\"}, data: {}});\n * \n * new HTTPTransport().delete('https://chats', { timeout: 5000, headers: { \"h1\": \"v1\", \"h2\": \"v2\" }, data: { \"d1\": \"dv1\" }});\n */\n\ninterface Options {\n    timeout?: number;\n    headers?: Record<string, string>;\n    method?: string;\n    data?: Record<string, any>;\n}\n\nexport class HTTPTransport {\n\n    METHODS = {\n        GET: 'GET',\n        POST: 'POST',\n        PUT: \"PUT\",\n        DELETE: \"DELETE\"\n    };\n\n    get = (url: string, options: Options = {}): Promise<XMLHttpRequest> => {\n        return this.request(url, { ...options, method: this.METHODS.GET }, options.timeout);\n    };\n\n    put = (url: string, options: Options = {}): Promise<XMLHttpRequest> => {\n        return this.request(url, { ...options, method: this.METHODS.PUT }, options.timeout);\n    };\n\n    post = (url: string, options: Options = {}): Promise<XMLHttpRequest> => {\n        return this.request(url, { ...options, method: this.METHODS.POST }, options.timeout);\n    };\n\n    delete = (url: string, options: Options = {}): Promise<XMLHttpRequest> => {\n        return this.request(url, { ...options, method: this.METHODS.DELETE }, options.timeout);\n    };\n\n    request = (url: string, options: Options, timeout: number = 5000): Promise<XMLHttpRequest> => {\n        const { method, data, headers } = options;\n\n        return new Promise((resolve, reject) => {\n\n            const xhr = new XMLHttpRequest();\n\n            if (method === this.METHODS.GET && data) {\n                xhr.open(method, url + this.queryStringify(data));\n            } else {\n                xhr.open(method, url);\n            }\n\n            xhr.onload = function () {\n                resolve(xhr);\n            };\n\n            for (let header of Object.keys(headers)) {\n                xhr.setRequestHeader(header, headers[header]);\n            }\n            xhr.timeout = timeout;\n\n            xhr.onabort = reject;\n            xhr.onerror = reject;\n            xhr.ontimeout = reject;\n\n            if (method === this.METHODS.GET || !data) {\n                xhr.send();\n            } else {\n                let formData = new FormData();\n                for (var key in data) {\n                    formData.append(key, data[key]);\n                }\n                xhr.send(formData);\n            }\n        });\n    };\n\n    queryStringify = (data: Record<string, any>): string => {\n        if (!data || Object.keys(data).length === 0) {\n            return \"\";\n        }\n\n        let dataString = \"\";\n        for (let key of Object.keys(data)) {\n            if (typeof data[key] === 'object') {\n                throw Error(\"not yet implemented\");\n            }\n            dataString += (dataString === \"\") ? \"?\" : \"&\";\n            dataString += `${key}=${data[key]}`;\n        }\n        return dataString;\n    }\n}"]}